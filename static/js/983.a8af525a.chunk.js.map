{"version":3,"file":"static/js/983.a8af525a.chunk.js","mappings":"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","sources":["components/TrendingList/TrendingList.jsx","pages/HomePage.jsx","services/apiMDB.jsx","services/useHooks.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nconst TrendingList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <div>\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TrendingList;\n","import { useTrendingList } from '../services/useHooks';\n\nimport TrendingList from 'components/TrendingList/TrendingList';\n\nconst HomePage = () => {\n  const { trendingMovies } = useTrendingList();\n  return (\n    <div>\n      <TrendingList movies={trendingMovies} />\n    </div>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'fd58d78770f5e002deebabf4164f4fc6';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n\nexport const searchMovies = async inputValue => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${inputValue}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data.cast.map(({ name, character, profile_path, id }) => {\n    return {\n      name,\n      character,\n      profile_path,\n      id,\n    };\n  });\n};\n\nexport const getMoviesReviews = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ author, content, id }) => {\n    return {\n      author,\n      content,\n      id,\n    };\n  });\n};\n","import * as API from '../services/apiMDB';\nimport { useState, useEffect } from 'react';\n\nexport const useTrendingList = () => {\n  const [trendingMovies, setMovies] = useState([]);\n\n  useEffect(() => {\n    API.getTrending().then(ret => setMovies(ret));\n  }, []);\n\n  return { trendingMovies };\n};\n\nexport const useMovieDetails = movieId => {\n  const [movieDetails, setMovieDetails] = useState([]);\n\n  useEffect(() => {\n    API.getMovieDetails(movieId).then(movieDetailsReturnedFromApi =>\n      setMovieDetails(movieDetailsReturnedFromApi)\n    );\n  }, [movieId]);\n\n  return { movieDetails };\n};\n\nexport const useMovieCredits = movieId => {\n  const [movieCredits, setMovieCredits] = useState([]);\n\n  useEffect(() => {\n    API.getMovieCredits(movieId).then(ret => setMovieCredits(ret));\n  }, [movieId]);\n  return { movieCredits };\n};\n\nexport const useMovieReviews = movieId => {\n  const [movieReviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    API.getMoviesReviews(movieId).then(ret => setReviews(ret));\n  }, [movieId]);\n  return { movieReviews };\n};\n\nexport const useSearchMovies = input => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    API.searchMovies(input).then(ret => setMovies(ret));\n  }, [input]);\n  return { movies };\n};\n"],"names":["movies","location","useLocation","map","movie","to","id","state","from","title","trendingMovies","useTrendingList","axios","API_KEY","getTrending","response","data","results","searchMovies","inputValue","getMovieDetails","movieId","getMovieCredits","moviesId","cast","name","character","profile_path","getMoviesReviews","author","content","useState","setMovies","useEffect","API","then","ret","useMovieDetails","movieDetails","setMovieDetails","movieDetailsReturnedFromApi","useMovieCredits","movieCredits","setMovieCredits","useMovieReviews","movieReviews","setReviews"],"sourceRoot":""}