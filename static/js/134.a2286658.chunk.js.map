{"version":3,"file":"static/js/134.a2286658.chunk.js","mappings":"oKAmBA,IAjBqB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OAChBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,0BACE,wBACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,SACGG,EAAMK,SAFFL,EAAME,GADA,OAUxB,C,2HCZYI,EAAS,WACpB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOX,EAAP,KAAeY,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAgBA,OAPAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAaH,EAAaI,IAAI,SAChCD,GACFE,EAAAA,GAAiBF,GAAYG,MAAK,SAAAC,GAAG,OAAIT,EAAUS,EAAd,GAExC,GAAE,CAACP,KAGF,4BACE,kBAAMQ,SAhBW,SAAAC,GACnBA,EAAIC,iBACJT,EAAgB,CAAEU,MAAOF,EAAIG,OAAOC,WAAWC,OAGhD,EAWG,WACE,kBACEC,KAAK,OACLC,KAAK,aACLC,YAAY,YACZC,aAAa,MACbC,WAAS,KAGX,mBAAQJ,KAAK,SAAb,wBAIF,SAAC,IAAD,CAAc7B,OAAQA,MAG3B,EAED,W,+LCzCAkC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAW,mCAAG,oGACFF,EAAAA,EAAAA,IAAA,sCAAyCC,IADvC,cACnBE,EADmB,yBAElBA,EAASC,KAAKC,QAAQpC,KAAI,YAC/B,MAAO,CACLG,GAFgD,EAAhBA,GAGhCG,MAHgD,EAAZA,MAKvC,KAPwB,2CAAH,qDAUX+B,EAAY,mCAAG,WAAMC,GAAN,uFACHP,EAAAA,EAAAA,IAAA,gCACIC,EADJ,kBACqBM,EADrB,2BADG,cACpBJ,EADoB,yBAInBA,EAASC,KAAKC,QAAQpC,KAAI,YAC/B,MAAO,CACLG,GAFgD,EAAhBA,GAGhCG,MAHgD,EAAZA,MAKvC,KATyB,2CAAH,sDAYZiC,EAAe,mCAAG,WAAMC,GAAN,uFACNT,EAAAA,EAAAA,IAAA,iBACXS,EADW,oBACQR,EADR,oBADM,cACvBE,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfM,EAAe,mCAAG,WAAMC,GAAN,uFACNX,EAAAA,EAAAA,IAAA,iBACXW,EADW,4BACiBV,EADjB,oBADM,cACvBE,EADuB,yBAKtBA,EAASC,KAAKQ,KAAK3C,KAAI,YAC5B,MAAO,CACL2B,KAFqE,EAAxCA,KAG7BiB,UAHqE,EAAlCA,UAInCC,aAJqE,EAAvBA,aAK9C1C,GALqE,EAATA,GAO/D,KAZ4B,2CAAH,sDAef2C,EAAgB,mCAAG,WAAMJ,GAAN,uFACPX,EAAAA,EAAAA,IAAA,iBACXW,EADW,4BACiBV,EADjB,2BADO,cACxBE,EADwB,yBAIvBA,EAASC,KAAKC,QAAQpC,KAAI,YAC/B,MAAO,CACL+C,OAF0D,EAA1BA,OAGhCC,QAH0D,EAAlBA,QAIxC7C,GAJ0D,EAATA,GAMpD,KAV6B,2CAAH,qD","sources":["components/TrendingList/TrendingList.jsx","pages/Movies.jsx","services/apiMDB.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nconst TrendingList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <div>\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TrendingList;\n","import { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport * as API from '../services/apiMDB';\nimport TrendingList from '../components/TrendingList/TrendingList';\n\nexport const Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    setSearchParams({ query: evt.target.queryInput.value });\n\n    return;\n  };\n\n  useEffect(() => {\n    const movieTitle = searchParams.get('query');\n    if (movieTitle) {\n      API.searchMovies(movieTitle).then(ret => setMovies(ret));\n    }\n  }, [searchParams]);\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"queryInput\"\n          placeholder=\"Search...\"\n          autoComplete=\"off\"\n          autoFocus\n        />\n\n        <button type=\"submit\">Search</button>\n\n        {/* <ToastContainer /> */}\n      </form>\n      <TrendingList movies={movies} />\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'fd58d78770f5e002deebabf4164f4fc6';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n\nexport const searchMovies = async inputValue => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${inputValue}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data.cast.map(({ name, character, profile_path, id }) => {\n    return {\n      name,\n      character,\n      profile_path,\n      id,\n    };\n  });\n};\n\nexport const getMoviesReviews = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ author, content, id }) => {\n    return {\n      author,\n      content,\n      id,\n    };\n  });\n};\n"],"names":["movies","location","useLocation","map","movie","to","id","state","from","title","Movies","useState","setMovies","useSearchParams","searchParams","setSearchParams","useEffect","movieTitle","get","API","then","ret","onSubmit","evt","preventDefault","query","target","queryInput","value","type","name","placeholder","autoComplete","autoFocus","axios","API_KEY","getTrending","response","data","results","searchMovies","inputValue","getMovieDetails","movieId","getMovieCredits","moviesId","cast","character","profile_path","getMoviesReviews","author","content"],"sourceRoot":""}