{"version":3,"file":"static/js/186.a7a21d63.chunk.js","mappings":"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","sources":["components/Reviews/Reviews.jsx","services/apiMDB.jsx","services/useHooks.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useMovieReviews } from '../../services/useHooks';\nimport PropTypes from 'prop-types';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const { movieReviews } = useMovieReviews(movieId);\n\n  return (\n    <div>\n      {movieReviews?.length === 0 && (\n        <p>We don't have any reviews for this movies</p>\n      )}\n      <ul>\n        {movieReviews.map(review => {\n          return (\n            <li key={review.id}>\n              <p>Author: {review.author}</p>\n              <p>{review.content}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nReviews.propTypes = {\n  movieId: PropTypes.string,\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'fd58d78770f5e002deebabf4164f4fc6';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n\nexport const searchMovies = async inputValue => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${inputValue}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data.cast.map(({ name, character, profile_path, id }) => {\n    return {\n      name,\n      character,\n      profile_path,\n      id,\n    };\n  });\n};\n\nexport const getMoviesReviews = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ author, content, id }) => {\n    return {\n      author,\n      content,\n      id,\n    };\n  });\n};\n","import * as API from '../services/apiMDB';\nimport { useState, useEffect } from 'react';\n\nexport const useTrendingList = () => {\n  const [trendingMovies, setMovies] = useState([]);\n\n  useEffect(() => {\n    API.getTrending().then(ret => setMovies(ret));\n  }, []);\n\n  return { trendingMovies };\n};\n\nexport const useMovieDetails = movieId => {\n  const [movieDetails, setMovieDetails] = useState([]);\n\n  useEffect(() => {\n    API.getMovieDetails(movieId).then(movieDetailsReturnedFromApi =>\n      setMovieDetails(movieDetailsReturnedFromApi)\n    );\n  }, [movieId]);\n\n  return { movieDetails };\n};\n\nexport const useMovieCredits = movieId => {\n  const [movieCredits, setMovieCredits] = useState([]);\n\n  useEffect(() => {\n    API.getMovieCredits(movieId).then(ret => setMovieCredits(ret));\n  }, [movieId]);\n  return { movieCredits };\n};\n\nexport const useMovieReviews = movieId => {\n  const [movieReviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    API.getMoviesReviews(movieId).then(ret => setReviews(ret));\n  }, [movieId]);\n  return { movieReviews };\n};\n\nexport const useSearchMovies = input => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    API.searchMovies(input).then(ret => setMovies(ret));\n  }, [input]);\n  return { movies };\n};\n"],"names":["movieId","useParams","movieReviews","useMovieReviews","length","map","review","author","content","id","axios","API_KEY","getTrending","response","data","results","title","searchMovies","inputValue","getMovieDetails","getMovieCredits","moviesId","cast","name","character","profile_path","getMoviesReviews","useTrendingList","useState","trendingMovies","setMovies","useEffect","API","then","ret","useMovieDetails","movieDetails","setMovieDetails","movieDetailsReturnedFromApi","useMovieCredits","movieCredits","setMovieCredits","setReviews"],"sourceRoot":""}